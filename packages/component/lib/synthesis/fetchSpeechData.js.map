{"version":3,"sources":["../../src/synthesis/fetchSpeechData.js"],"names":["DEFAULT_LANGUAGE","DEFAULT_VOICE","SYNTHESIS_URL","DEFAULT_REGION","fetchSpeechData","accessToken","lang","outputFormat","pitch","rate","text","voice","volume","gender","region","ssml","fetch","Authorization","headers","method","body","res","status","Error","arrayBuffer"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA,IAAMA,gBAAgB,GAAG,OAAzB;AACA,IAAMC,aAAa,GACjB,gEADF;AAEA,IAAMC,aAAa,GAAG,+CAAtB;AACA,IAAMC,cAAc,GAAG,QAAvB;;SAE8BC,e;;;;;;;4BAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,WADa,QACbA,WADa,mBAEbC,IAFa,EAEbA,IAFa,0BAENN,gBAFM,cAGbO,YAHa,QAGbA,YAHa,EAIbC,KAJa,QAIbA,KAJa,EAKbC,IALa,QAKbA,IALa,EAMbC,IANa,QAMbA,IANa,oBAObC,KAPa,EAObA,KAPa,2BAOLV,aAPK,eAQbW,MARa,QAQbA,MARa,qBASbC,MATa,EASbA,MATa,4BASJ,IATI,mCAUbC,MAVa,EAUbA,MAVa,4BAUJX,cAVI;AAYPY,YAAAA,IAZO,GAYA,wBAAU;AAAEF,cAAAA,MAAM,EAANA,MAAF;AAAUP,cAAAA,IAAI,EAAJA,IAAV;AAAgBE,cAAAA,KAAK,EAALA,KAAhB;AAAuBC,cAAAA,IAAI,EAAJA,IAAvB;AAA6BC,cAAAA,IAAI,EAAJA,IAA7B;AAAmCC,cAAAA,KAAK,EAALA,KAAnC;AAA0CC,cAAAA,MAAM,EAANA;AAA1C,aAAV,CAZA;AAAA,0BAcKI,KAdL;AAAA,4CAcsBF,MAdtB,cAcgCZ,aAdhC;AAAA;AAAA,mBAgByBG,WAhBzB;;AAAA;AAAA;AAAA,0BAgBM,SAhBN;AAAA,0BAkBmBE,YAlBnB;AAAA;AAgBTU,cAAAA,aAhBS;AAiBT,4BAjBS,EAiBO,sBAjBP;AAkBT,wCAlBS;AAAA;AAAA,0BAqBLF,IArBK;AAAA;AAeXG,cAAAA,OAfW;AAoBXC,cAAAA,MApBW,EAoBH,MApBG;AAqBXC,cAAAA,IArBW;AAAA;AAAA;AAAA;;AAAA;AAcPC,YAAAA,GAdO;;AAAA,kBAwBTA,GAAG,CAACC,MAAJ,KAAe,GAxBN;AAAA;AAAA;AAAA;;AAAA,kBAyBL,IAAIC,KAAJ,wDAC4CF,GAAG,CAACC,MADhD,EAzBK;;AAAA;AAAA,6CA8BND,GAAG,CAACG,WAAJ,EA9BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import buildSSML from \"./buildSSML\";\n\nconst DEFAULT_LANGUAGE = \"en-US\";\nconst DEFAULT_VOICE =\n  \"Microsoft Server Speech Text to Speech Voice (en-US, JessaRUS)\";\nconst SYNTHESIS_URL = \"tts.speech.microsoft.com/cognitiveservices/v1\";\nconst DEFAULT_REGION = \"westus\";\n\nexport default async function fetchSpeechData({\n  accessToken,\n  lang = DEFAULT_LANGUAGE,\n  outputFormat,\n  pitch,\n  rate,\n  text,\n  voice = DEFAULT_VOICE,\n  volume,\n  gender = null,\n  region = DEFAULT_REGION\n}) {\n  const ssml = buildSSML({ gender, lang, pitch, rate, text, voice, volume });\n\n  const res = await fetch(`https://${region}.${SYNTHESIS_URL}`, {\n    headers: {\n      Authorization: \"Bearer \" + (await accessToken),\n      \"Content-Type\": \"application/ssml+xml\",\n      \"X-Microsoft-OutputFormat\": outputFormat\n    },\n    method: \"POST\",\n    body: ssml\n  });\n\n  if (res.status !== 200) {\n    throw new Error(\n      `Failed to synthesize speech, server returned ${res.status}`\n    );\n  }\n\n  return res.arrayBuffer();\n}\n"],"file":"fetchSpeechData.js"}